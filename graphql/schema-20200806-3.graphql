schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

# Q U E R I E S
type Query @aws_iam @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  # User
  getUserByUsername(username: String!): User

  # Stream
  getStream(id: ID!): Stream
  listStreamsByUser(first: Int, after: String, userId: ID!): StreamConnection
  listSealedStreams(first: Int, after: String): StreamConnection
  listLiveStreams(first: Int, after: String): StreamConnection
    @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"])

  # Cantos
  getCanto(id: ID!): Canto
  listPausedCantos(first: Int, after: String): CantoConnection
  listLiveCantos(first: Int, after: String): CantoConnection
    @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"])

  # User interaction
  getUserInteractions(
    interactionType: UserInteractionType
    actorUserId: ID!
    targetUserId: ID!
  ): [UserInteraction]
    @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"])
  listUserInteractionsByActorUserId(
    interactionType: UserInteractionType
    actorUserId: ID!
    limit: Int
    offset: Int
  ): [UserInteraction]
    @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"])

  # Bookmarks
  getContentBookmark(id: ID!): ContentInteraction
  countContentBookmarks(contentId: ID!, contentType: ContentType): ResultCount
  countContentBookmarksByUser(
    userId: ID!
    contentType: ContentType
  ): ResultCount
  listContentBookmarks(
    contentId: ID!
    contentType: ContentType
    limit: Int
    offset: Int
  ): [ContentInteraction]
  listContentBookmarksByUser(
    userId: ID!
    contentType: ContentType
    limit: Int
    offset: Int
  ): [ContentInteraction]
  getContentBookmarkByUser(
    userId: ID!
    contentType: ContentType
  ): ContentInteraction

  # Comments
  countContentComments(contentId: ID!, contentType: ContentType): ResultCount
  listContentComments(
    contentId: ID!
    contentType: ContentType
    limit: Int
    offset: Int
  ): [Comment]
  listContentCommentsByUser(
    userId: ID!
    contentType: ContentType
    limit: Int
    offset: Int
  ): [Comment]

  # Flag
  getFlag(id: ID!): Flag
  countFlags(searchText: String, status: FlagApprovalStatus): ResultCount
  listFlags(
    limit: Int
    offset: Int
    searchText: String
    status: FlagApprovalStatus
  ): [Flag]
  getFlagByUser(flaggerUserId: ID!, contentType: ContentType): Flag
  getChildContentFlagsByUser(
    flaggerUserId: ID!
    contentType: ContentType
    parentContentId: String!
  ): [Flag]

  # UncloggerPrompt
  listUncloggerPrompts(
    limit: Int
    offset: Int
    searchText: String
    status: UncloggerPromptApprovalStatus
  ): [UncloggerPrompt]
  countUncloggerPrompts(
    searchText: String
    status: UncloggerPromptApprovalStatus
  ): ResultCount
  getRandomUncloggerPrompt(
    category: UncloggerPromptCategory
    language: Language
  ): UncloggerPrompt

  # Search
  search(query: String!): [SearchResult]
  # @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"])

  # Recaptcha V3 token
  getRecaptchaTokenResult(token: String!, ip: String): RecaptchaV3Result
}

# M U T A T I O N S
type Mutation @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  # User
  updateUser(input: UpdateUserInput!): User
  deleteUser(input: DeleteUserInput!): User

  # Stream
  createStream(input: CreateStreamInput!): Stream
  updateStream(input: UpdateStreamInput!): Stream

  # Canto
  createCanto(input: CreateCantoInput!): Canto
  updateCanto(input: UpdateCantoInput!): Canto

  # User interaction
  createUserInteraction(input: CreateUserInteractionInput!): UserInteraction
  deleteUserInteraction(input: DeleteUserInteractionInput!): UserInteraction

  # Content interaction
  createContentInteraction(
    input: CreateContentInteractionInput!
  ): ContentInteraction
  updateContentInteraction(
    input: UpdateContentInteractionInput
  ): ContentInteraction
  deleteContentInteraction(
    input: DeleteContentInteractionInput!
  ): ContentInteraction

  # Comment
  createComment(input: CreateCommentInput!): Comment

  # Flag
  createFlag(input: CreateFlagInput!): Flag
  updateFlagContent(input: UpdateFlagContentInput): Flag
  deleteFlag(input: DeleteFlagInput!): Flag
  updateFlagReview(input: UpdateFlagReviewInput): Flag
    @aws_cognito_user_pools(cognito_groups: ["tafalk-admin-ug"])

  # UncloggerPrompt
  createUncloggerPrompt(input: CreateUncloggerPromptInput!): UncloggerPrompt
  updateUncloggerPromptContent(
    input: UpdateUncloggerPromptContentInput!
  ): UncloggerPrompt
  updateUncloggerPromptReview(
    input: UpdateUncloggerPromptReviewInput!
  ): UncloggerPrompt
    @aws_cognito_user_pools(cognito_groups: ["tafalk-admin-ug"])
  deleteUncloggerPrompt(input: DeleteUncloggerPromptInput!): UncloggerPrompt
}

# S U B S C R I P T I O N S
type Subscription @aws_iam @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  onUpdateStream(id: ID!): Stream @aws_subscribe(mutations: ["updateStream"])
  onUpdateCanto(id: ID!): Canto @aws_subscribe(mutations: ["updateCanto"])
  onCreateOrDeleteContentInteraction(contentId: String): ContentInteraction
    @aws_subscribe(
      mutations: [
        "createContentInteraction"
        "deleteContentInteraction"
        "updateContentInteraction"
      ]
    )
  onCreateOrDeleteFlag(contentId: String): Flag
    @aws_subscribe(mutations: ["createFlag", "deleteFlag"])
}

# I N T E R F A C E S
interface CommunityReaction {
  id: ID!
  time: String
  userId: String!
}

# U N I O N S
union SearchResult = Stream | Canto | User

# I N P U T S
input UpdateUserInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  accountStatus: String
  allowDirectMessages: Boolean
  bio: String
  birthDate: String
  cognitoIdentityId: String
  createdAt: String
  email: String
  fullName: String
  id: ID!
  lastAccess: String
  location: String
  preferredName: String
  language: Language
  profilePictureKey: String
  site: String
  theme: String
  username: String
}

input DeleteUserInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
}

input CreateStreamInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  body: String
  isSealed: Int
  location: String
  mood: Mood
  position: Position
  sealTime: String
  startTime: String!
  title: String
  trackId: String
  userId: String!
}

input UpdateStreamInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  body: String
  isSealed: Int
  location: String
  mood: Mood
  position: Position
  sealTime: String
  startTime: String
  title: String
  uncloggerPromptId: String
  trackId: String
}

input CreateCantoInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  body: String
  isPaused: Int
  startTime: String!
  lastUpdateTime: String
}

input UpdateCantoInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  body: String
  isPaused: Int
  lastUpdateTime: String!
}

input CreateUserInteractionInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  actorUserId: String!
  interactionType: UserInteractionType
  targetUserId: String!
}

input DeleteUserInteractionInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
}

input CreateContentInteractionInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  userId: String!
  interactionType: ContentInteractionType!
  contentType: ContentType!
  contentId: String!
  indices: String
}

input UpdateContentInteractionInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  indices: String!
}

input CreateCommentInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  userId: String!
  body: String!
  contentType: ContentType!
  contentId: String!
}

input DeleteContentInteractionInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
}

input CreateFlagInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  contentType: ContentType!
  contentId: String
  parentContentId: String
  flaggerUserId: String!
  category: String!
  type: String!
  detail: String
}

input UpdateFlagContentInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  category: String
  type: String
  detail: String
}

input UpdateFlagReviewInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  reviewerUserId: String
  status: FlagApprovalStatus
  reviewNote: String
}

input DeleteFlagInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
}

input CreateUncloggerPromptInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  category: UncloggerPromptCategory!
  body: String!
  language: Language
  creatorUserId: String
}

input UpdateUncloggerPromptContentInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  category: UncloggerPromptCategory
  body: String
  language: Language
}

input UpdateUncloggerPromptReviewInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  reviewerUserId: String
  status: UncloggerPromptApprovalStatus
  reviewNote: String
}

input DeleteUncloggerPromptInput @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
}

# T Y P E S
type User @aws_iam @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  username: String!
  email: String
  preferredName: String
  accountStatus: String
  allowDirectMessages: Boolean
  theme: String
  bio: String
  birthDate: String!
  cognitoIdentityId: String
  createdAt: String
  lastAccess: String
  location: String
  language: Language
  profilePictureKey: String
  site: String
  canto: Canto
  streams: StreamConnection
  userWatchInteractions: [UserInteraction]
  userBlockInteractions: [UserInteraction]
  committedStreamCommentCount: ResultCount
  committedStreamComments: [Comment]
  bookmarkedStreamCount: ResultCount
  bookmarkedStreams: [Stream]
  bookmarkedCantoCount: ResultCount
  bookmarkedCantos: [Canto]
}

type Stream @aws_iam @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  title: String
  body: String!
  userId: String!
  user: User
  isSealed: Int
  location: String
  mood: Mood
  position: Position
  startTime: String!
  sealTime: String
  trackId: String
  uncloggerPromptId: String
  uncloggerPrompt: UncloggerPrompt
  bookmarkCount: ResultCount
  bookmarks: [ContentInteraction]
  commentCount: ResultCount
  comments: [Comment]
  flagCount: ResultCount
  flags: [Flag]
}

type Canto @aws_iam @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  body: String!
  user: User
  isPaused: Int
  startTime: String!
  lastUpdateTime: String
  bookmarkCount: ResultCount
  bookmarks: [ContentInteraction]
  flagCount: ResultCount
  flags: [Flag]
}

type UserInteraction @aws_iam @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  actorUserId: String!
  actorUser: User
  targetUserId: String!
  targetUser: User
  interactionType: UserInteractionType
  lastChangeTime: String!
}

type ContentInteraction implements CommunityReaction {
  id: ID!
  userId: String!
  user: User
  interactionType: ContentInteractionType!
  contentType: ContentType!
  contentId: String!
  indices: String
  time: String
}

type Comment implements CommunityReaction {
  id: ID!
  userId: String!
  user: User
  body: String
  contentType: ContentType!
  contentId: String!
  flagCount: ResultCount
  flags: [Flag]
  time: String
}

type Flag @aws_iam @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  contentType: ContentType!
  contentId: String
  parentContentId: String
  flaggerUserId: String!
  flaggerUser: User
  category: String!
  type: String!
  detail: String
  reviewerUserId: String
  reviewerUser: User
  status: FlagApprovalStatus
  reviewNote: String
  createTime: String
  reviewTime: String
  lastUpdateTime: String
}

type RecaptchaV3Result @aws_iam @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  challengeTimestamp: String
  errorCodes: [String]
  hostname: String
  success: Boolean
}

type UncloggerPrompt @aws_iam @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  id: ID!
  category: UncloggerPromptCategory!
  body: String!
  language: Language
  status: UncloggerPromptApprovalStatus
  creatorUserId: String
  creatorUser: User
  createTime: String
  reviewerUserId: String
  reviewerUser: User
  reviewNote: String
  reviewTime: String
}

type ResultCount @aws_iam @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  count: Int
}

# C O N N E C T I O N   T Y P E S
type StreamConnection @aws_iam @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  items: [Stream]
  nextToken: String
}

type CantoConnection @aws_iam @aws_cognito_user_pools(cognito_groups: ["tafalk-default-ug"]) {
  items: [Canto]
  nextToken: String
}

# E N U M S
enum ContentType {
  stream
  canto
  comment
}

enum Mood {
  Aroused
  AsUsual
  Drunk
  HardToExplain
  High
  Melancholic
  Relieved
}

enum Position {
  AllFours
  Kneeling
  Lying
  Sitting
  Squatting
  Standing
  Walking
}

enum UncloggerPromptCategory {
  Trivia
  HistoricalEvent
  News
  PhilosophySchools
  Other
}

enum UserInteractionType {
  Block
  Watch
}

enum ContentInteractionType {
  Bookmark
}

enum Language {
  en
  tr
}

enum UncloggerPromptApprovalStatus {
  Pending
  Declined
  Accepted
  OnHold
}

enum FlagApprovalStatus {
  Pending
  Declined
  Accepted
  OnHold
}
