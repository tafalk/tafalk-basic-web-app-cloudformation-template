Description:
  This template creates build projects
Parameters:
  ProjectIdentifierName:
    Type: String
  EnvironmentName:
    Type: String
  BranchName:
    Type: String
  CognitoUserExporterFunctionRepositoryName:
    Type: String
  LambdaArtifactStoreBucket:
    Type: String
  UserTable:
    Type: String
  StreamTable:
    Type: String
  UserGroup:
    Type: String
  CodeCommitRepoCodeBuildRoleArn:
    Type: String
  CodeCommitRepoCodePipelineRoleArn:
    Type: String
  LambdaManagerCloudFormationRoleArn:
    Type: String
  CognitoUserExporterFunctionName:
    Type: String
  PlaceFinderFunctionName:
    Type: String
  PlaceFinderFunctionRepositoryName:
    Type: String
  RecaptchaTokenResolverFunctionName:
    Type: String
  RecaptchaTokenResolverFunctionRepositoryName:
    Type: String
  ResourceSearcherFunctionName:
    Type: String
  ResourceSearcherFunctionRepositoryName:
    Type: String
  PlacesCacheEndpoint:
    Type: String
  PlacesCachePort:
    Type: String
  GooglePlacesApiKeyName:
    Type: String
  RecaptchaSecretName:
    Type: String
  RecaptchaVerifyEndpoint:
    Type: String
Resources:
  # CodeBuild projects
  CognitoUserExporterFunctionBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectIdentifierName}-cognito-user-exporter-func-build-proj"
      Description: Used to build Cognito Post Confirmation User Import function from the CodeCommit Repo
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/python:3.7.1"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: LAMBDA_ARTIFACT_STORE_BUCKET
            Value: !Ref LambdaArtifactStoreBucket
      ServiceRole: !Ref CodeCommitRepoCodeBuildRoleArn

  PlaceGetterFunctionBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectIdentifierName}-place-getter-func-build-proj"
      Description: Used to build google-places-getter function from the CodeCommit Repo
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/python:3.7.1"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: LAMBDA_ARTIFACT_STORE_BUCKET
            Value: !Ref LambdaArtifactStoreBucket
      ServiceRole: !Ref CodeCommitRepoCodeBuildRoleArn

  RecaptchaResolverFunctionBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectIdentifierName}-recaptcha-resolver-func-build-proj"
      Description: Used to build recaptcha resolver function from the CodeCommit Repo
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/python:3.7.1"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: LAMBDA_ARTIFACT_STORE_BUCKET
            Value: !Ref LambdaArtifactStoreBucket
      ServiceRole: !Ref CodeCommitRepoCodeBuildRoleArn

  ResourceSearcherFunctionBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectIdentifierName}-resource-searcher-func-build-proj"
      Description: Used to build resource searcher function from the CodeCommit Repo
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/python:3.7.1"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: LAMBDA_ARTIFACT_STORE_BUCKET
            Value: !Ref LambdaArtifactStoreBucket
      ServiceRole: !Ref CodeCommitRepoCodeBuildRoleArn

  # CI/CD Pipelines
  CognitoUserExporterFunctionPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${ProjectIdentifierName}-user-exporter-pipeline"
      RoleArn: !Ref CodeCommitRepoCodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaArtifactStoreBucket
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: UESource
              Configuration:
                RepositoryName: !Ref CognitoUserExporterFunctionRepositoryName
                BranchName: !Ref BranchName
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildFunction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CognitoUserExporterFunctionBuildProject
              InputArtifacts:
                - Name: UESource
              OutputArtifacts:
                - Name: UEBuild
              RunOrder: 1
        - Name: Pipeline
          Actions:
            - Name: DeployPipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                StackName: !Sub "${ProjectIdentifierName}-user-exporter-deploy-stack"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: "UEBuild::output-template.yaml"
                RoleArn: !Ref LambdaManagerCloudFormationRoleArn
                ParameterOverrides: !Sub '{"FunctionName": "${CognitoUserExporterFunctionName}", "UserTableName": "${UserTable}", "UserGroupName": "${UserGroup}", "Environment": "${EnvironmentName}", "Application": "${ProjectIdentifierName}"}'
              InputArtifacts:
                - Name: UEBuild
              RunOrder: 1

  PlaceFinderFunctionPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${ProjectIdentifierName}-place-finder-pipeline"
      RoleArn: !Ref CodeCommitRepoCodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaArtifactStoreBucket
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: PFSource
              Configuration:
                RepositoryName: !Ref PlaceFinderFunctionRepositoryName
                BranchName: !Ref BranchName
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildFunction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref PlaceGetterFunctionBuildProject
              InputArtifacts:
                - Name: PFSource
              OutputArtifacts:
                - Name: PFBuild
              RunOrder: 1
        - Name: Pipeline
          Actions:
            - Name: DeployPipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                StackName: !Sub "${ProjectIdentifierName}-place-finder-deploy-stack"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: "PFBuild::output-template.yaml"
                RoleArn: !Ref LambdaManagerCloudFormationRoleArn
                ParameterOverrides: !Sub '{"FunctionName": "${PlaceFinderFunctionName}", "RedisEndpoint": "${PlacesCacheEndpoint}", "RedisPort": "${PlacesCachePort}", "GooglePlacesApiKeyName": "${GooglePlacesApiKeyName}", "Environment": "${EnvironmentName}", "Application": "${ProjectIdentifierName}"}'
              InputArtifacts:
                - Name: PFBuild
              RunOrder: 1

  RecaptchaResolverFunctionPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${ProjectIdentifierName}-recaptcha-resolver-pipeline"
      RoleArn: !Ref CodeCommitRepoCodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaArtifactStoreBucket
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: RRSource
              Configuration:
                RepositoryName: !Ref RecaptchaTokenResolverFunctionRepositoryName
                BranchName: !Ref BranchName
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildFunction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref RecaptchaResolverFunctionBuildProject
              InputArtifacts:
                - Name: RRSource
              OutputArtifacts:
                - Name: RRBuild
              RunOrder: 1
        - Name: Pipeline
          Actions:
            - Name: DeployPipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                StackName: !Sub "${ProjectIdentifierName}-recaptcha-resolver-deploy-stack"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: "RRBuild::output-template.yaml"
                RoleArn: !Ref LambdaManagerCloudFormationRoleArn
                ParameterOverrides: !Sub '{"FunctionName": "${RecaptchaTokenResolverFunctionName}", "RecaptchaSecretName": "${RecaptchaSecretName}", "RecaptchaVerifyEndpoint": "${RecaptchaVerifyEndpoint}", "Environment": "${EnvironmentName}", "Application": "${ProjectIdentifierName}"}'
              InputArtifacts:
                - Name: RRBuild
              RunOrder: 1

  ResourceSearcherFunctionPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${ProjectIdentifierName}-resource-searcher-pipeline"
      RoleArn: !Ref CodeCommitRepoCodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaArtifactStoreBucket
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: RSSource
              Configuration:
                RepositoryName: !Ref ResourceSearcherFunctionRepositoryName
                BranchName: !Ref BranchName
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildFunction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref ResourceSearcherFunctionBuildProject
              InputArtifacts:
                - Name: RSSource
              OutputArtifacts:
                - Name: RSBuild
              RunOrder: 1
        - Name: Pipeline
          Actions:
            - Name: DeployPipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                StackName: !Sub "${ProjectIdentifierName}-resource-searcher-deploy-stack"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: "RSBuild::output-template.yaml"
                RoleArn: !Ref LambdaManagerCloudFormationRoleArn
                ParameterOverrides: !Sub '{"FunctionName": "${ResourceSearcherFunctionName}", "StreamTable": "${StreamTable}", "UserTable": "${UserTable}", "Environment": "${EnvironmentName}", "Application": "${ProjectIdentifierName}"}'
              InputArtifacts:
                - Name: RSBuild
              RunOrder: 1

