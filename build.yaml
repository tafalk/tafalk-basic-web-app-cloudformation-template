Description:
  This template creates build projects
Parameters:
  # Common
  ProjectIdentifierName:
    Type: String
  EnvironmentName:
    Type: String
  BranchName:
    Type: String
  LambdaArtifactStoreBucket:
    Type: String
  CodeBuildRoleArn:
    Type: String
  CodePipelineRoleArn:
    Type: String
  LambdaManagerCloudFormationRoleArn:
    Type: String
  GitHubOwner:
    Type: String
  FunctionGithubOauthTokenSecret:
    Type: String
  # Cognito User Exporter
  CognitoUserExporterFunctionName:
    Type: String
  CognitoUserExporterFunctionRepositoryName:
    Type: String
  UserTable:
    Type: String
  UserGroup:
    Type: String
  # Token Resolver
  RecaptchaTokenResolverFunctionName:
    Type: String
  RecaptchaTokenResolverFunctionRepositoryName:
    Type: String
  RecaptchaSecretName:
    Type: String
  RecaptchaVerifyEndpoint:
    Type: String
  # Resource Searcher
  ResourceSearcherFunctionName:
    Type: String
  ResourceSearcherFunctionRepositoryName:
    Type: String
  StreamTable:
    Type: String
  CantoTable:
    Type: String
  # Certificate Delegating
  CertificateDelegatingFunctionName:
    Type: String
  CertificateDelegatingFunctionRepositoryName:
    Type: String
  AcmCertRegion:
    Type: String
  # RDS Bootstrap
  RdsBootstrapFunctionName:
    Type: String
  RdsBootstrapFunctionRepositoryName:
    Type: String
  AuroraMysqlCredentialsSecret:
    Type: String
  ApprovalDbClusterArn:
    Type: String
  ApprovalDbClusterEndpointAddress:
    Type: String
  ApprovalDbClusterEndpointPort:
    Type: String
  ApprovalDbName:
    Type: String
  ApprovalDbSchemaName:
    Type: String
  FlagTableName:
    Type: String
  UncloggerPromptTableName:
    Type: String
  # Site Policies
  SitePoliciesRepositoryName:
    Type: String
  SitePoliciesBucketName:
    Type: String
  # Site Files
  SiteFilesRepositoryName:
    Type: String
  SiteFilesBucketName:
    Type: String

Resources:
  # CodeBuild projects
  CognitoUserExporterFunctionBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectIdentifierName}-cognito-user-exporter-func-build-proj"
      Description: Used to build Cognito Post Confirmation User Import function from the CodeCommit Repo
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/python:3.8"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: LAMBDA_ARTIFACT_STORE_BUCKET
            Value: !Ref LambdaArtifactStoreBucket
      ServiceRole: !Ref CodeBuildRoleArn

  RecaptchaResolverFunctionBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectIdentifierName}-recaptcha-resolver-func-build-proj"
      Description: Used to build recaptcha resolver function from the CodeCommit Repo
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/python:3.8"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: LAMBDA_ARTIFACT_STORE_BUCKET
            Value: !Ref LambdaArtifactStoreBucket
      ServiceRole: !Ref CodeBuildRoleArn

  ResourceSearcherFunctionBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectIdentifierName}-resource-searcher-func-build-proj"
      Description: Used to build resource searcher function from the CodeCommit Repo
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/python:3.8"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: LAMBDA_ARTIFACT_STORE_BUCKET
            Value: !Ref LambdaArtifactStoreBucket
      ServiceRole: !Ref CodeBuildRoleArn

  CertificateDelegatingFunctionBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectIdentifierName}-cert-delegate-func-build-proj"
      Description: Used to build certificate delegating function from the CodeCommit Repo
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/python:3.8"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: LAMBDA_ARTIFACT_STORE_BUCKET
            Value: !Ref LambdaArtifactStoreBucket
      ServiceRole: !Ref CodeBuildRoleArn

  RDSBootstrapperFunctionBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectIdentifierName}-rds-bootstrapper-func-build-proj"
      Description: Used to build RDS Bootstrap function from the CodeCommit Repo
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/python:3.8"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: LAMBDA_ARTIFACT_STORE_BUCKET
            Value: !Ref LambdaArtifactStoreBucket
      ServiceRole: !Ref CodeBuildRoleArn

  # CI/CD Pipelines
  CognitoUserExporterFunctionPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${ProjectIdentifierName}-user-exporter-pipeline"
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaArtifactStoreBucket
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              OutputArtifacts:
                - Name: UESource
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref CognitoUserExporterFunctionRepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Sub "{{resolve:secretsmanager:${FunctionGithubOauthTokenSecret}:SecretString:token}}"
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildFunction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CognitoUserExporterFunctionBuildProject
              InputArtifacts:
                - Name: UESource
              OutputArtifacts:
                - Name: UEBuild
              RunOrder: 1
        - Name: Pipeline
          Actions:
            - Name: DeployPipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                StackName: !Sub "${ProjectIdentifierName}-user-exporter-deploy-stack"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: "UEBuild::output-template.yaml"
                RoleArn: !Ref LambdaManagerCloudFormationRoleArn
                ParameterOverrides: !Sub '
                  {
                    "FunctionName": "${CognitoUserExporterFunctionName}",
                    "UserTableName": "${UserTable}",
                    "UserGroupName": "${UserGroup}",
                    "Environment": "${EnvironmentName}",
                    "Application": "${ProjectIdentifierName}"
                  }
                '
              InputArtifacts:
                - Name: UEBuild
              RunOrder: 1

  RecaptchaResolverFunctionPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${ProjectIdentifierName}-recaptcha-resolver-pipeline"
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaArtifactStoreBucket
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              OutputArtifacts:
                - Name: RRSource
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref RecaptchaTokenResolverFunctionRepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Sub "{{resolve:secretsmanager:${FunctionGithubOauthTokenSecret}:SecretString:token}}"
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildFunction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref RecaptchaResolverFunctionBuildProject
              InputArtifacts:
                - Name: RRSource
              OutputArtifacts:
                - Name: RRBuild
              RunOrder: 1
        - Name: Pipeline
          Actions:
            - Name: DeployPipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                StackName: !Sub "${ProjectIdentifierName}-recaptcha-resolver-deploy-stack"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: "RRBuild::output-template.yaml"
                RoleArn: !Ref LambdaManagerCloudFormationRoleArn
                ParameterOverrides: !Sub '
                  {
                    "FunctionName": "${RecaptchaTokenResolverFunctionName}",
                    "RecaptchaSecretName": "${RecaptchaSecretName}",
                    "RecaptchaVerifyEndpoint": "${RecaptchaVerifyEndpoint}",
                    "Environment": "${EnvironmentName}",
                    "Application": "${ProjectIdentifierName}"
                  }
                '
              InputArtifacts:
                - Name: RRBuild
              RunOrder: 1

  ResourceSearcherFunctionPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${ProjectIdentifierName}-resource-searcher-pipeline"
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaArtifactStoreBucket
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              OutputArtifacts:
                - Name: RSSource
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref ResourceSearcherFunctionRepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Sub "{{resolve:secretsmanager:${FunctionGithubOauthTokenSecret}:SecretString:token}}"
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildFunction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref ResourceSearcherFunctionBuildProject
              InputArtifacts:
                - Name: RSSource
              OutputArtifacts:
                - Name: RSBuild
              RunOrder: 1
        - Name: Pipeline
          Actions:
            - Name: DeployPipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                StackName: !Sub "${ProjectIdentifierName}-resource-searcher-deploy-stack"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: "RSBuild::output-template.yaml"
                RoleArn: !Ref LambdaManagerCloudFormationRoleArn
                ParameterOverrides: !Sub '
                  {
                    "FunctionName": "${ResourceSearcherFunctionName}",
                    "StreamTable": "${StreamTable}",
                    "UserTable": "${UserTable}",
                    "CantoTable": "${CantoTable}",
                    "Environment": "${EnvironmentName}",
                    "Application": "${ProjectIdentifierName}"
                  }
                '
              InputArtifacts:
                - Name: RSBuild
              RunOrder: 1

  CertificateDelegatingFunctionPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${ProjectIdentifierName}-cert-delegating-pipeline"
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaArtifactStoreBucket
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              OutputArtifacts:
                - Name: CDSource
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref CertificateDelegatingFunctionRepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Sub "{{resolve:secretsmanager:${FunctionGithubOauthTokenSecret}:SecretString:token}}"
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildFunction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CertificateDelegatingFunctionBuildProject
              InputArtifacts:
                - Name: CDSource
              OutputArtifacts:
                - Name: CDBuild
              RunOrder: 1
        - Name: Pipeline
          Actions:
            - Name: DeployPipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                StackName: !Sub "${ProjectIdentifierName}-cert-delegate-deploy-stack"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: "CDBuild::output-template.yaml"
                RoleArn: !Ref LambdaManagerCloudFormationRoleArn
                ParameterOverrides: !Sub '
                  {
                    "FunctionName": "${CertificateDelegatingFunctionName}",
                    "AcmCertRegion": "${AcmCertRegion}",
                    "Environment": "${EnvironmentName}",
                    "Application": "${ProjectIdentifierName}"
                  }
                '
              InputArtifacts:
                - Name: CDBuild
              RunOrder: 1

  RDSBootstrapperFunctionPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${ProjectIdentifierName}-rds-bootstrapper-pipeline"
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaArtifactStoreBucket
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              OutputArtifacts:
                - Name: DBSource
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref RdsBootstrapFunctionRepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Sub "{{resolve:secretsmanager:${FunctionGithubOauthTokenSecret}:SecretString:token}}"
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildFunction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref RDSBootstrapperFunctionBuildProject
              InputArtifacts:
                - Name: DBSource
              OutputArtifacts:
                - Name: DBBuild
              RunOrder: 1
        - Name: Pipeline
          Actions:
            - Name: DeployPipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                StackName: !Sub "${ProjectIdentifierName}-rds-bootstrapper-deploy-stack"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: "DBBuild::output-template.yaml"
                RoleArn: !Ref LambdaManagerCloudFormationRoleArn
                ParameterOverrides: !Sub '
                  {
                    "FunctionName": "${RdsBootstrapFunctionName}",
                    "CredentialsSecret": "${AuroraMysqlCredentialsSecret}",
                    "Endpoint": "${ApprovalDbClusterEndpointAddress}",
                    "Port": "${ApprovalDbClusterEndpointPort}",
                    "ApprovalDbClusterArn": "${ApprovalDbClusterArn}",
                    "ApprovalDbName": "${ApprovalDbName}",
                    "ApprovalDbSchemaName": "${ApprovalDbSchemaName}",
                    "FlagTable": "${FlagTableName}",
                    "UncloggerPromptTable": "${UncloggerPromptTableName}",
                    "Environment": "${EnvironmentName}",
                    "Application": "${ProjectIdentifierName}"
                  }
                '
              InputArtifacts:
                - Name: DBBuild
              RunOrder: 1

  SitePoliciesPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${ProjectIdentifierName}-site-policies-pipeline"
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaArtifactStoreBucket
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              OutputArtifacts:
                - Name: SPSource
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref SitePoliciesRepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Sub "{{resolve:secretsmanager:${FunctionGithubOauthTokenSecret}:SecretString:token}}"
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Pipeline
          Actions:
            - Name: DeployPipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: "1"
              Configuration:
                BucketName: !Ref SitePoliciesBucketName
                Extract: true
              InputArtifacts:
                - Name: SPSource
              RunOrder: 1

  SiteFilesPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${ProjectIdentifierName}-site-files-pipeline"
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaArtifactStoreBucket
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: ThirdParty
                Owner: AWS
                Version: "1"
                Provider: GitHub
              OutputArtifacts:
                - Name: SFSource
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref SiteFilesRepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Sub "{{resolve:secretsmanager:${FunctionGithubOauthTokenSecret}:SecretString:token}}"
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Pipeline
          Actions:
            - Name: DeployPipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: "1"
              Configuration:
                BucketName: !Ref SiteFilesBucketName
                Extract: true
              InputArtifacts:
                - Name: SFSource
              RunOrder: 1

  # WebHooks
  CognitoUserExporterFunctionWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Sub "{{resolve:secretsmanager:${FunctionGithubOauthTokenSecret}:SecretString:token}}"
      RegisterWithThirdParty: "true"
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CognitoUserExporterFunctionPipeline
      TargetPipelineVersion: !GetAtt CognitoUserExporterFunctionPipeline.Version
      TargetAction: FetchSource

  RecaptchaResolverFunctionWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Sub "{{resolve:secretsmanager:${FunctionGithubOauthTokenSecret}:SecretString:token}}"
      RegisterWithThirdParty: "true"
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref RecaptchaResolverFunctionPipeline
      TargetPipelineVersion: !GetAtt RecaptchaResolverFunctionPipeline.Version
      TargetAction: FetchSource

  ResourceSearcherFunctionWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Sub "{{resolve:secretsmanager:${FunctionGithubOauthTokenSecret}:SecretString:token}}"
      RegisterWithThirdParty: "true"
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref ResourceSearcherFunctionPipeline
      TargetPipelineVersion: !GetAtt ResourceSearcherFunctionPipeline.Version
      TargetAction: FetchSource

  CertificateDelegatingFunctionWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Sub "{{resolve:secretsmanager:${FunctionGithubOauthTokenSecret}:SecretString:token}}"
      RegisterWithThirdParty: "true"
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CertificateDelegatingFunctionPipeline
      TargetPipelineVersion: !GetAtt CertificateDelegatingFunctionPipeline.Version
      TargetAction: FetchSource

  RDSBootstrapperFunctionWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Sub "{{resolve:secretsmanager:${FunctionGithubOauthTokenSecret}:SecretString:token}}"
      RegisterWithThirdParty: "true"
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref RDSBootstrapperFunctionPipeline
      TargetPipelineVersion: !GetAtt RDSBootstrapperFunctionPipeline.Version
      TargetAction: FetchSource

  SitePoliciesWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Sub "{{resolve:secretsmanager:${FunctionGithubOauthTokenSecret}:SecretString:token}}"
      RegisterWithThirdParty: "true"
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref SitePoliciesPipeline
      TargetPipelineVersion: !GetAtt SitePoliciesPipeline.Version
      TargetAction: FetchSource

  SiteFilesWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Sub "{{resolve:secretsmanager:${FunctionGithubOauthTokenSecret}:SecretString:token}}"
      RegisterWithThirdParty: "true"
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref SiteFilesPipeline
      TargetPipelineVersion: !GetAtt SiteFilesPipeline.Version
      TargetAction: FetchSource
