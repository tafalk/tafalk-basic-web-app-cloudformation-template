Description:
  This template deploys S3 buckets
Parameters:
  ProjectIdentifierName:
    Type: String
  EnvironmentName:
    Type: String
  LambdaFunctionArtifactStoreBucketName:
    Type: String
  UserFileBucketName:
    Type: String
  SitePoliciesBucketName:
    Type: String

Resources:

  # Buckets
  FunctionDeploymentsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketName: !Ref LambdaFunctionArtifactStoreBucketName
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Application
          Value: !Ref ProjectIdentifierName
      VersioningConfiguration:
        Status: Enabled

  UserFilesBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketName: !Ref UserFileBucketName
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Application
          Value: !Ref ProjectIdentifierName
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
              - "*"
            AllowedMethods:
              - HEAD
              - GET
              - PUT
              - POST
              - DELETE
            MaxAge: 3000
            ExposedHeaders:
              - x-amz-server-side-encryption
              - x-amz-request-id
              - x-amz-id-2
              - ETag
            AllowedHeaders:
              - "*"

  SitePoliciesBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref SitePoliciesBucketName
      AccessControl: PublicRead
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
            AllowedOrigins:
              - "*"
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Application
          Value: !Ref ProjectIdentifierName

  # Policies
  FunctionDeploymentsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FunctionDeploymentsBucket
      PolicyDocument:
        Statement:
          - Sid: DenyInsecureConnections
            Effect: Deny
            Action:
              - "s3:*"
            Resource: !Join [ "", [ !GetAtt FunctionDeploymentsBucket.Arn, "/*" ] ]
            Principal: "*"
            Condition:
              Bool:
                "aws:SecureTransport": false

  SitePoliciesBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SitePoliciesBucket
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: Allow
            Resource: !Join ["", [ !GetAtt SitePoliciesBucket.Arn, "/*"]]
            Principal: "*"

Outputs:
  FunctionDeploymentsBucket:
    Description: A reference to the created FunctionDeploymentsBucket
    Value: !Ref FunctionDeploymentsBucket
  FunctionDeploymentsBucketArn:
    Description: A reference to the created FunctionDeploymentsBucket Arn
    Value: !GetAtt FunctionDeploymentsBucket.Arn
  UserFilesBucket:
    Description: A reference to the created UserFilesBucket
    Value: !Ref UserFilesBucket
  UserFilesBucketArn:
    Description: A reference to the created UserFilesBucket Arn
    Value: !GetAtt UserFilesBucket.Arn
  SitePoliciesBucket:
    Description: A reference to the created SitePoliciesBucket
    Value: !Ref SitePoliciesBucket
  SitePoliciesBucketArn:
    Description: A reference to the created SitePoliciesBucket Arn
    Value: !GetAtt SitePoliciesBucket.Arn

