Description: 
  This template deploys IAM roles for the application

Parameters:
  ProjectIdentifierName:
    Description: An prefix that will be added to resource names (e.g. project name)
    Type: String
    MinLength: 3
    MaxLength: 10
    ConstraintDescription: must be between 3 and 10 characters.
  EnvironmentName:
    Description: An environment name that will be added to resource names
    Type: String
    AllowedValues:
      - dev
      - test
      - prod
    Default: dev
    ConstraintDescription: must specify 'dev', 'test' or 'prod'.

Resources:
  # ROLES 
  # Creates a role that allows Cognito to send SNS messages
  SNSRole:
    # Specifying a RoleName, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name. 
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal: 
              Service: 
                - "cognito-idp.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Policies:
        - PolicyName: !Sub "${ProjectIdentifierName}-${EnvironmentName}-cognito-sns-policy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - Effect: "Allow"
                Action: "sns:publish"
                Resource: "*"
  
  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-CodePipeline-Service-3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'devicefarm:ListProjects'
                  - 'devicefarm:ListDevicePools'
                  - 'devicefarm:GetRun'
                  - 'devicefarm:GetUpload'
                  - 'devicefarm:CreateUpload'
                  - 'devicefarm:ScheduleRun'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'elasticbeanstalk:*'
                  - 'ec2:*'
                  - 'elasticloadbalancing:*'
                  - 'autoscaling:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                  - 'rds:*'
                  - 'sqs:*'
                  - 'ecs:*'
                Resource: '*'
  
  CognitoTriggeredLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: !Sub "${ProjectIdentifierName}-${EnvironmentName}-cognito-triggered-lambda-policy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - Effect: "Allow"
                Action: 
                  - "cognito-idp:*"
                  - "cognito-identity:*"
                  - "logs:*"
                  - "dynamodb:*"
                Resource: "*"

Outputs:
  SNSRole:
    Description: A reference to the created SNS Role
    Value: !Ref SNSRole
  CodePipelineRole:
    Description: A reference to the created Code Pipeline Role
    Value: !Ref CodePipelineRole
  CognitoTriggeredLambdaRole:
    Description: A reference to the created Cognito Triggered Lambda Role
    Value: !Ref CognitoTriggeredLambdaRole
  SNSRoleArn:
    Description: A reference to the created SNS Role ARN
    Value: !GetAtt SNSRole.Arn
    Export:
      Name: !Sub "${ProjectIdentifierName}-${EnvironmentName}-sns-role-arn"
  CodePipelineRoleArn:
    Description: A reference to the created Code Pipeline Role ARN
    Value: !GetAtt CodePipelineRole.Arn
    Export:
      Name: !Sub "${ProjectIdentifierName}-${EnvironmentName}-code-pipeline-role-arn"
  CognitoTriggeredLambdaRoleArn:
    Description: A reference to the created Cognito Triggered Lambda Role ARN
    Value: !GetAtt CognitoTriggeredLambdaRole.Arn
    Export:
      Name: !Sub "${ProjectIdentifierName}-${EnvironmentName}-cognito-triggered-lambda-role-arn"